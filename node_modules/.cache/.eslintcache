[{"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\index.js":"1","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\App.js":"2","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\pages\\Home.js":"3","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Footer.js":"4","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\pages\\ExerciseDetail.js":"5","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Navbar.js":"6","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Detail.js":"7","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Search.js":"8","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Exercises.js":"9","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\ExerciseVideos.js":"10","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\SimilarExercises.js":"11","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\utils\\fetchData.js":"12","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\HeroBanner.js":"13","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\HorizontalScrollbar.js":"14","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\ExerciseCard.js":"15","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Loader.js":"16","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\BodyPart.js":"17","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Signup.js":"18","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Login.js":"19","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Homepage\\homepage.js":"20","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\BMICalculator.js":"21","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Profile.js":"22","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\ViewProfile.js":"23"},{"size":406,"mtime":1696743460243,"results":"24","hashOfConfig":"25"},{"size":1543,"mtime":1696938333207,"results":"26","hashOfConfig":"25"},{"size":797,"mtime":1696851441410,"results":"27","hashOfConfig":"25"},{"size":1183,"mtime":1696758970466,"results":"28","hashOfConfig":"25"},{"size":2084,"mtime":1696743460245,"results":"29","hashOfConfig":"25"},{"size":2221,"mtime":1696876428143,"results":"30","hashOfConfig":"25"},{"size":1589,"mtime":1696743460227,"results":"31","hashOfConfig":"25"},{"size":3324,"mtime":1696743460240,"results":"32","hashOfConfig":"25"},{"size":2172,"mtime":1696743460231,"results":"33","hashOfConfig":"25"},{"size":1406,"mtime":1696743460230,"results":"34","hashOfConfig":"25"},{"size":1088,"mtime":1696743460241,"results":"35","hashOfConfig":"25"},{"size":859,"mtime":1696743460250,"results":"36","hashOfConfig":"25"},{"size":3579,"mtime":1696861243994,"results":"37","hashOfConfig":"25"},{"size":1496,"mtime":1696743460235,"results":"38","hashOfConfig":"25"},{"size":978,"mtime":1696866463721,"results":"39","hashOfConfig":"25"},{"size":328,"mtime":1696743460237,"results":"40","hashOfConfig":"25"},{"size":1112,"mtime":1696743460225,"results":"41","hashOfConfig":"25"},{"size":3381,"mtime":1696937241928,"results":"42","hashOfConfig":"25"},{"size":2887,"mtime":1696938106998,"results":"43","hashOfConfig":"25"},{"size":3412,"mtime":1696835134803,"results":"44","hashOfConfig":"25"},{"size":1757,"mtime":1696860571733,"results":"45","hashOfConfig":"25"},{"size":5578,"mtime":1696872134177,"results":"46","hashOfConfig":"25"},{"size":779,"mtime":1696871390855,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"wob1jl",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\index.js",[],[],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\App.js",[],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\pages\\Home.js",[],[],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Footer.js",["122","123"],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\pages\\ExerciseDetail.js",[],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Navbar.js",[],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Detail.js",["124"],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Search.js",[],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Exercises.js",["125"],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\ExerciseVideos.js",[],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\SimilarExercises.js",[],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\utils\\fetchData.js",[],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\HeroBanner.js",["126"],[],"import React, { useState } from 'react';\r\nimport { Box, Typography, Button, Dialog, DialogContent } from '@mui/material';\r\nimport HeroBannerImage from '../assets/images/banner3.jpg';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\n\r\nconst HeroBanner = () => {\r\n  const [isDialogOpen, setDialogOpen] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Add a state variable to track login status\r\n\r\n  const openDialog = () => {\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setDialogOpen(false);\r\n  };\r\n\r\n  // Use useNavigate to get the navigation function\r\n  const navigate = useNavigate();\r\n\r\n  // Navigate to the login page when the \"Login\" button is clicked\r\n  const handleLogin = () => {\r\n    navigate('/login');\r\n    closeDialog(); // Close the dialog\r\n  };\r\n\r\n  // Navigate to the BMI Calculator page when the \"Calculate BMI\" button is clicked\r\n  const handleCalculateBMI = () => {\r\n    navigate('/calculate-bmi');\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        mt: { lg: '212px', xs: '70px' },\r\n        ml: { sm: '50px' },\r\n      }}\r\n      position=\"relative\"\r\n      p=\"10px\"\r\n    >\r\n      <Typography color=\"#FF2625\" fontWeight=\"600\" fontSize=\"35px\">\r\n        BStrong\r\n      </Typography>\r\n      <Typography\r\n        fontWeight=\"600\"\r\n        sx={{ fontSize: { lg: '30px', xs: '35px' } }}\r\n        mb=\"23px\"\r\n        mt=\"30px\"\r\n      >\r\n        Sweat, Build <br /> and Repeat\r\n      </Typography>\r\n      <Typography color=\"#212121\" fontSize=\"25px\" lineHeight=\"35px\" mb={4}>\r\n        Checkout the most effective exercises\r\n      </Typography>\r\n      {isLoggedIn ? (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"error\"\r\n          sx={{ backgroundColor: '#ff2625', padding: '10px' }}\r\n        >\r\n          Explore Exercises\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"error\"\r\n          onClick={openDialog} // Open the dialog when the button is clicked\r\n          sx={{ backgroundColor: '#ff2625', padding: '10px' }}\r\n        >\r\n          Explore Exercises\r\n        </Button>\r\n      )}\r\n\r\n      {/* Calculate BMI button */}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={handleCalculateBMI} // Navigate to the BMI Calculator page\r\n        sx={{ backgroundColor: '#FF2625', padding: '10px', marginLeft: '10px' }}\r\n      >\r\n        Calculate BMI\r\n      </Button>\r\n\r\n      <Typography\r\n        fontWeight={600}\r\n        color=\"#ff2625\"\r\n        sx={{\r\n          opacity: 0.2,\r\n          display: { lg: 'block', xs: 'none' },\r\n        }}\r\n        fontSize=\"200px\"\r\n        pt=\"40px\"\r\n      >\r\n        Exercise\r\n      </Typography>\r\n      <img\r\n        src={HeroBannerImage}\r\n        alt=\"banner\"\r\n        className=\"hero-banner-img\"\r\n        style={{\r\n          width: '80%',\r\n          maxWidth: '40%',\r\n          maxHeight: '700px',\r\n          margin: '1px auto',\r\n        }}\r\n      />\r\n\r\n      {/* Login dialog */}\r\n      <Dialog open={isDialogOpen} onClose={closeDialog}>\r\n        <DialogContent>\r\n          <Typography variant=\"h5\" mb={2}>\r\n            Please login to explore the exercises.\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={handleLogin} // Navigate to the login page\r\n            sx={{ backgroundColor: '#ff2625', padding: '10px' }}\r\n          >\r\n            Login\r\n          </Button>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeroBanner;\r\n\r\n","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\HorizontalScrollbar.js",[],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\ExerciseCard.js",["127"],[],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Stack, Typography } from '@mui/material'\r\n\r\nconst ExerciseCard = ( {exercise} ) => {\r\n  return (\r\n    <Link className='exercise-card' to={`/exercise/${exercise.id}`}>\r\n        <img src={exercise.gifUrl} alt={exercise.name}/>\r\n        <Stack direction='row'>\r\n            <Typography ml='20px' color='#ffa9a9' fontWeight='bold' pt='30px' textTransform='capitalize' fontSize='20px'>\r\n                {exercise.bodyPart}\r\n            </Typography>\r\n\r\n            <Typography ml='20px' color='#fcc757' fontWeight='bold'    pt='30px' textTransform='capitalize' fontSize='20px'>\r\n                {exercise.target}\r\n            </Typography>\r\n\r\n        </Stack>\r\n        <Typography ml='20px' color='#000' fontWeight='bold' pt='30px'\r\n        pb='0px' textTransform='capitalize' fontSize='20px'>\r\n            {exercise.name}\r\n        </Typography>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default ExerciseCard ","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Loader.js",[],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\BodyPart.js",[],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Signup.js",["128"],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Login.js",[],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Homepage\\homepage.js",["129","130","131","132","133"],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\BMICalculator.js",[],[],"C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\Profile.js",["134","135"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n} from '@mui/material';\r\nimport { fetchData } from '../utils/fetchData'; \r\n\r\nconst Profile = () => {\r\n  const [user, setUser] = useState({});\r\n  const [goals, setGoals] = useState([]);\r\n  const [updatedUser, setUpdatedUser] = useState({});\r\n  const [exercises, setExercises] = useState([]);\r\n  const { userId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetchData(`/api/user/profile/${userId}`);\r\n        setUser(response.data);\r\n        setGoals(response.data.goals || []);\r\n        setUpdatedUser({ ...response.data });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [userId]);\r\n\r\n  const handleGoalChange = (goal) => {\r\n    const updatedGoals = goals.includes(goal)\r\n      ? goals.filter((g) => g !== goal)\r\n      : [...goals, goal];\r\n    setGoals(updatedGoals);\r\n    setUpdatedUser({ ...updatedUser, goals: updatedGoals });\r\n  };\r\n\r\n  const handleUpdateProfile = async () => {\r\n    try {\r\n      // Send updated user data to the server\r\n      await fetchData(`/api/user/profile/${userId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updatedUser),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      // Optionally, show a success message or redirect to another page\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleGetExercises = async () => {\r\n    try {\r\n      // Fetch exercises based on user details and goals using a Rapid API endpoint\r\n      const exerciseData = await fetchData(\r\n        // Replace 'YOUR_RAPID_API_ENDPOINT' with the actual Rapid API endpoint URL\r\n        `https://api.example.com/exercises?gender=${updatedUser.gender}&age=${updatedUser.age}&weight=${updatedUser.weight}&height=${updatedUser.height}&goals=${goals.join(',')}`\r\n      );\r\n      setExercises(exerciseData);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box p={4}>\r\n      <Typography variant=\"h4\">User Profile</Typography>\r\n      <Box mt={2} mb={2}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Name\"\r\n          value={updatedUser.name || ''}\r\n          onChange={(e) => setUpdatedUser({ ...updatedUser, name: e.target.value })}\r\n        />\r\n      </Box>\r\n      <Box mt={2} mb={2}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Age\"\r\n          type=\"number\"\r\n          value={updatedUser.age || ''}\r\n          onChange={(e) => setUpdatedUser({ ...updatedUser, age: e.target.value })}\r\n        />\r\n      </Box>\r\n      <Box mt={2} mb={2}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Gender</InputLabel>\r\n          <Select\r\n            value={updatedUser.gender || ''}\r\n            onChange={(e) => setUpdatedUser({ ...updatedUser, gender: e.target.value })}\r\n          >\r\n            <MenuItem value=\"Male\">Male</MenuItem>\r\n            <MenuItem value=\"Female\">Female</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n      <Box mt={2} mb={2}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Height (cm)\"\r\n          type=\"number\"\r\n          value={updatedUser.height || ''}\r\n          onChange={(e) => setUpdatedUser({ ...updatedUser, height: e.target.value })}\r\n        />\r\n      </Box>\r\n      <Box mt={2} mb={2}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Weight (kg)\"\r\n          type=\"number\"\r\n          value={updatedUser.weight || ''}\r\n          onChange={(e) => setUpdatedUser({ ...updatedUser, weight: e.target.value })}\r\n        />\r\n      </Box>\r\n      <Box mt={2} mb={2}>\r\n        <Typography variant=\"h6\">Select Your Goals:</Typography>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={goals.includes('Weight Loss')}\r\n              onChange={() => handleGoalChange('Weight Loss')}\r\n            />\r\n          }\r\n          label=\"Weight Loss\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={goals.includes('Muscle Gain')}\r\n              onChange={() => handleGoalChange('Muscle Gain')}\r\n            />\r\n          }\r\n          label=\"Muscle Gain\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={goals.includes('Strength Training')}\r\n              onChange={() => handleGoalChange('Strength Training')}\r\n            />\r\n          }\r\n          label=\"Strength Training\"\r\n        />\r\n      </Box>\r\n      <Box mt={4}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleUpdateProfile}>\r\n          Update Profile\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ marginLeft: '16px' }}\r\n          component={Link} // Use Link to navigate\r\n          to={`/view-profile/${userId}`} // Navigate to the View Profile page\r\n        >\r\n          View Profile\r\n        </Button>\r\n      </Box>\r\n      {exercises.length > 0 && (\r\n        <Box mt={4}>\r\n          <Typography variant=\"h5\">Recommended Exercises:</Typography>\r\n          <ul>\r\n            {exercises.map((exercise) => (\r\n              <li key={exercise.id}>{exercise.name}</li>\r\n            ))}\r\n          </ul>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Profile;","C:\\Users\\Pratiksha Bhagwat\\Gym-Website-3\\src\\components\\ViewProfile.js",[],[],{"ruleId":"136","severity":1,"message":"137","line":2,"column":40,"nodeType":"138","messageId":"139","endLine":2,"endColumn":50},{"ruleId":"136","severity":1,"message":"140","line":2,"column":52,"nodeType":"138","messageId":"139","endLine":2,"endColumn":56},{"ruleId":"136","severity":1,"message":"141","line":2,"column":29,"nodeType":"138","messageId":"139","endLine":2,"endColumn":35},{"ruleId":"142","severity":1,"message":"143","line":37,"column":6,"nodeType":"144","endLine":37,"endColumn":16,"suggestions":"145"},{"ruleId":"136","severity":1,"message":"146","line":8,"column":22,"nodeType":"138","messageId":"139","endLine":8,"endColumn":35},{"ruleId":"136","severity":1,"message":"141","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":16},{"ruleId":"136","severity":1,"message":"147","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":13},{"ruleId":"148","severity":1,"message":"149","line":10,"column":7,"nodeType":"150","endLine":10,"endColumn":43},{"ruleId":"151","severity":1,"message":"152","line":10,"column":7,"nodeType":"150","endLine":10,"endColumn":43},{"ruleId":"153","severity":1,"message":"154","line":95,"column":17,"nodeType":"150","endLine":95,"endColumn":98},{"ruleId":"153","severity":1,"message":"154","line":96,"column":17,"nodeType":"150","endLine":96,"endColumn":98},{"ruleId":"153","severity":1,"message":"154","line":97,"column":17,"nodeType":"150","endLine":97,"endColumn":98},{"ruleId":"136","severity":1,"message":"155","line":18,"column":10,"nodeType":"138","messageId":"139","endLine":18,"endColumn":14},{"ruleId":"136","severity":1,"message":"156","line":63,"column":9,"nodeType":"138","messageId":"139","endLine":63,"endColumn":27},"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setExercises'. Either include it or remove the dependency array. If 'setExercises' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["157"],"'setIsLoggedIn' is assigned a value but never used.","'axios' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'user' is assigned a value but never used.","'handleGetExercises' is assigned a value but never used.",{"desc":"158","fix":"159"},"Update the dependencies array to be: [bodyPart, setExercises]",{"range":"160","text":"161"},[1249,1259],"[bodyPart, setExercises]"]