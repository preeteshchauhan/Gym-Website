{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pratiksha Bhagwat\\\\Gym-Website-3\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Stack, TextField, Typography } from '@mui/material';\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\nimport HorizontalScrollbar from './HorizontalScrollbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = _ref => {\n  _s();\n\n  let {\n    setExercises,\n    bodyPart,\n    setBodyPart\n  } = _ref;\n  const [search, setSearch] = useState('');\n  const [bodyParts, setBodyParts] = useState([]);\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      const bodyPartsData = await fetchData('https://exercisedb.p.rapidapi.com/exercises/bodyPartList', exerciseOptions);\n      setBodyParts(['all', ...bodyPartsData]); //(...)->spread all the body parts data\n    };\n\n    fetchExercisesData(); //we wanna call it immediately as soon as the app loads\n  }, []);\n\n  const handleSearch = async () => {\n    // async means it fetches some data, it means it will take time here we'll fetch from API\n    if (search) {\n      const exerciseData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions); //takes 2 params.\n\n      const searchedExercises = exerciseData.filter(exercise => exercise.name.toLowerCase().includes(search) || exercise.target.toLowerCase().includes(search) || exercise.equipment.toLowerCase().includes(search) || exercise.bodyPart.toLowerCase().includes(search));\n      setSearch('');\n      setExercises(searchedExercises);\n      window.scrollTo({\n        top: 1800,\n        left: 100,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    alignItems: \"center\",\n    jusifycontent: \"center\",\n    p: \"20px\",\n    mt: \"30px\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      fontWeight: 700,\n      sx: {\n        fontSize: {\n          lg: '44px',\n          xs: '30px'\n        }\n      },\n      mb: \"50px\",\n      textAlign: \"center\",\n      children: [\"Sweat is just fat crying \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 34\n      }, this), \" Lets Start!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      position: \"relative\",\n      mb: \"72px\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          input: {\n            fontWeight: '700',\n            border: 'none',\n            borderRadius: '40px'\n          },\n          width: {\n            lg: '800px',\n            xs: '350px'\n          },\n          backgroundColor: '#fff',\n          borderRadius: '40px'\n        },\n        height: \"76px\",\n        value: search //every input needs to have a value\n        ,\n        onChange: e => setSearch(e.target.value.toLowerCase()) //every input needs to have onChange property\n        ,\n        placeholder: \"Search Exercises\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"search-btn\",\n        sx: {\n          bgcolor: '#ff2625',\n          color: '#fff',\n          textTransform: 'none',\n          width: {\n            lg: '175px',\n            xs: '80px'\n          },\n          fontSize: {\n            lg: '20px',\n            xs: '14px'\n          },\n          height: '56px',\n          position: 'absolute',\n          //bcoz we are using absolute we have to use right property otherwise search bar shifts to more right\n          right: '0'\n        },\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative',\n        width: '100%',\n        p: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(HorizontalScrollbar, {\n        data: bodyParts,\n        bodyPart: bodyPart,\n        setBodyPart: setBodyPart,\n        isBodyParts: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"d8wTwRvzHL6OZN+7RYO/sYXEDrI=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Stack","TextField","Typography","exerciseOptions","fetchData","HorizontalScrollbar","Search","setExercises","bodyPart","setBodyPart","search","setSearch","bodyParts","setBodyParts","fetchExercisesData","bodyPartsData","handleSearch","exerciseData","searchedExercises","filter","exercise","name","toLowerCase","includes","target","equipment","window","scrollTo","top","left","behavior","fontSize","lg","xs","input","fontWeight","border","borderRadius","width","backgroundColor","e","value","bgcolor","color","textTransform","height","position","right","p"],"sources":["C:/Users/Pratiksha Bhagwat/Gym-Website-3/src/components/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Box, Button, Stack, TextField, Typography } from '@mui/material'\r\nimport { exerciseOptions, fetchData } from '../utils/fetchData'\r\nimport HorizontalScrollbar from './HorizontalScrollbar'\r\n\r\nconst Search = ({ setExercises, bodyPart, setBodyPart }) => {\r\n  const [search, setSearch] = useState('')\r\n  const [bodyParts, setBodyParts] = useState([])\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchExercisesData = async () => {\r\n      const bodyPartsData = await fetchData('https://exercisedb.p.rapidapi.com/exercises/bodyPartList', exerciseOptions);\r\n\r\n      setBodyParts(['all', ...bodyPartsData])//(...)->spread all the body parts data\r\n    }\r\n    fetchExercisesData();//we wanna call it immediately as soon as the app loads\r\n  }, [])\r\n\r\n\r\n  const handleSearch = async () => {// async means it fetches some data, it means it will take time here we'll fetch from API\r\n    if (search) {\r\n      const exerciseData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions);//takes 2 params.\r\n\r\n      const searchedExercises = exerciseData.filter(\r\n        (exercise) => exercise.name.toLowerCase().includes(search)\r\n          || exercise.target.toLowerCase().includes(search)\r\n          || exercise.equipment.toLowerCase().includes(search)\r\n          || exercise.bodyPart.toLowerCase().includes(search)\r\n      );\r\n\r\n      setSearch('');\r\n      setExercises(searchedExercises);\r\n      window.scrollTo({ top: 1800, left: 100, behavior: 'smooth' })\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Stack alignItems=\"center\" jusifycontent=\"center\" p=\"20px\" mt=\"30px\">\r\n      <Typography fontWeight={700}\r\n        sx={{ fontSize: { lg: '44px', xs: '30px' } }}\r\n        mb='50px' textAlign=\"center\" >\r\n        Sweat is just fat crying <br /> Lets Start!\r\n      </Typography>\r\n      <Box position=\"relative\" mb=\"72px\">\r\n        <TextField\r\n          sx={{\r\n            input: {\r\n              fontWeight: '700',\r\n              border: 'none',\r\n              borderRadius: '40px'\r\n            },\r\n            width: { lg: '800px', xs: '350px' },\r\n            backgroundColor: '#fff',\r\n            borderRadius: '40px'\r\n          }}\r\n          height=\"76px\"\r\n          value={search}//every input needs to have a value\r\n          onChange={(e) => setSearch(e.target.value.toLowerCase())}//every input needs to have onChange property\r\n          placeholder=\"Search Exercises\"\r\n          type=\"text\"\r\n        />\r\n        <Button className='search-btn'\r\n          sx={{\r\n            bgcolor: '#ff2625',\r\n            color: '#fff',\r\n            textTransform: 'none',\r\n            width: { lg: '175px', xs: '80px' },\r\n            fontSize: { lg: '20px', xs: '14px' },\r\n            height: '56px',\r\n            position: 'absolute',//bcoz we are using absolute we have to use right property otherwise search bar shifts to more right\r\n            right: '0',\r\n          }}\r\n          onClick={handleSearch}\r\n        >\r\n          Search\r\n        </Button>\r\n      </Box>\r\n      {/* Box for horizontal scroll bar for exercises list */}\r\n      <Box sx={{ position: 'relative', width: '100%', p: '20px' }}>\r\n        <HorizontalScrollbar data={bodyParts}\r\n          bodyPart={bodyPart} setBodyPart={setBodyPart} isBodyParts />\r\n      </Box>\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default Search"],"mappings":"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"},"metadata":{},"sourceType":"module"}