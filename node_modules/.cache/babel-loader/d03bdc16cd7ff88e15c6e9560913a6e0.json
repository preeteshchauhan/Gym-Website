{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\preet\\\\Downloads\\\\Gym-website\\\\src\\\\components\\\\Exercises.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport { Box, Stack, Typography } from '@mui/material';\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\nimport ExerciseCard from './ExerciseCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Exercises = _ref => {\n  _s();\n\n  let {\n    exercises,\n    setExercises,\n    bodyPart\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const exercisesPerPage = 9;\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n\n  const paginate = (e, value) => {\n    setCurrentPage(value);\n    window.scrollTo({\n      top: 1800,\n      behavior: 'smooth'\n    });\n  };\n\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exerciseData = [];\n\n      if (bodyPart === 'all') {\n        exerciseData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions);\n      } else {\n        exerciseData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`, exerciseOptions);\n      }\n\n      setExercises(exerciseData);\n    };\n\n    fetchExercisesData();\n  }, [bodyPart]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"exercises\",\n    sx: {\n      mt: {\n        lg: '110px'\n      }\n    },\n    mt: \"50px\",\n    p: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      mb: \"46px\",\n      align: \"center\",\n      children: \"Available Exercises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        gap: {\n          lg: '110px',\n          xs: '50px'\n        }\n      },\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      children: currentExercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        exercise: exercise\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      alignItems: \"center\",\n      mt: \"100px\",\n      children: exercises.length > 9 && /*#__PURE__*/_jsxDEV(Pagination, {\n        shape: \"rounded\",\n        count: Math.ceil(exercises.length / exercisesPerPage),\n        page: currentPage,\n        onChange: paginate,\n        size: \"large\",\n        siblingCount: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Exercises, \"GDYsIxij9y/ZFL42bMqqthZmeP4=\");\n\n_c = Exercises;\nexport default Exercises;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useState","useEffect","Pagination","Box","Stack","Typography","exerciseOptions","fetchData","ExerciseCard","Exercises","exercises","setExercises","bodyPart","currentPage","setCurrentPage","exercisesPerPage","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","e","value","window","scrollTo","top","behavior","fetchExercisesData","exerciseData","mt","lg","gap","xs","map","exercise","index","length","Math","ceil"],"sources":["C:/Users/preet/Downloads/Gym-website/src/components/Exercises.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Pagination from '@mui/material/Pagination'\r\nimport { Box, Stack, Typography} from '@mui/material'\r\nimport { exerciseOptions, fetchData } from '../utils/fetchData' \r\nimport ExerciseCard from './ExerciseCard' \r\n\r\n\r\n\r\nconst Exercises = ({exercises, setExercises, bodyPart}) => {\r\n  \r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const exercisesPerPage = 9\r\n\r\n  const indexOfLastExercise = currentPage * exercisesPerPage;\r\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\r\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\r\n\r\n  const paginate = (e, value) => {\r\n    setCurrentPage(value);\r\n    window.scrollTo({top: 1800,  behavior: 'smooth'})\r\n  }\r\n\r\n  useEffect(() => { \r\n    const fetchExercisesData = async () => {\r\n      let exerciseData = [];\r\n\r\n      \r\n      if(bodyPart === 'all'){\r\n        exerciseData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions);\r\n      }else{\r\n        exerciseData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`, exerciseOptions); \r\n      }\r\n      setExercises(exerciseData);\r\n    }\r\n  \r\n    fetchExercisesData();\r\n  }, [bodyPart]);\r\n  \r\n\r\n  return (\r\n    <Box id='exercises'\r\n    sx={{mt: {lg: '110px'}}}\r\n    mt=\"50px\"\r\n    p='20px'\r\n    >\r\n      <Typography variant='h4' mb='46px' align='center'>\r\n        Available Exercises\r\n      </Typography>\r\n      <Stack direction='row' sx={{gap: { lg: '110px', xs: '50px'}}} flexWrap='wrap' justifyContent='center'>\r\n        {currentExercises.map((exercise, index) => (\r\n          <ExerciseCard  key={index} exercise={exercise} />\r\n        ))}\r\n      </Stack>\r\n      <Stack alignItems=\"center\" mt='100px'>\r\n          {exercises.length > 9 && (\r\n            <Pagination \r\n              shape='rounded'\r\n              count={Math.ceil(exercises.length / exercisesPerPage)}\r\n              page={currentPage}\r\n              onChange={paginate}\r\n              size='large'\r\n              siblingCount={0}\r\n            />\r\n          )}\r\n        </Stack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Exercises    "],"mappings":"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"},"metadata":{},"sourceType":"module"}