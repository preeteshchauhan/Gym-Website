{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/preet/Downloads/Gym-website/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/preet/Downloads/Gym-website/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/preet/Downloads/Gym-website/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Pagination from'@mui/material/Pagination';import{Box,Stack,Typography}from'@mui/material';import{exerciseOptions,fetchData}from'../utils/fetchData';import ExerciseCard from'./ExerciseCard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Exercises=function Exercises(_ref){var exercises=_ref.exercises,setExercises=_ref.setExercises,bodyPart=_ref.bodyPart;var _useState=useState(1),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];var exercisesPerPage=9;var indexOfLastExercise=currentPage*exercisesPerPage;var indexOfFirstExercise=indexOfLastExercise-exercisesPerPage;var currentExercises=exercises.slice(indexOfFirstExercise,indexOfLastExercise);var paginate=function paginate(e,value){setCurrentPage(value);window.scrollTo({top:1800,behavior:'smooth'});};useEffect(function(){var fetchExercisesData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var exerciseData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:exerciseData=[];if(!(bodyPart==='all')){_context.next=7;break;}_context.next=4;return fetchData('https://exercisedb.p.rapidapi.com/exercises',exerciseOptions);case 4:exerciseData=_context.sent;_context.next=10;break;case 7:_context.next=9;return fetchData(\"https://exercisedb.p.rapidapi.com/exercises/bodyPart/\".concat(bodyPart),exerciseOptions);case 9:exerciseData=_context.sent;case 10:setExercises(exerciseData);case 11:case\"end\":return _context.stop();}}},_callee);}));return function fetchExercisesData(){return _ref2.apply(this,arguments);};}();fetchExercisesData();},[bodyPart]);return/*#__PURE__*/_jsxs(Box,{id:\"exercises\",sx:{mt:{lg:'110px'}},mt:\"50px\",p:\"20px\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",mb:\"46px\",align:\"center\",children:\"Available Exercises\"}),/*#__PURE__*/_jsx(Stack,{direction:\"row\",sx:{gap:{lg:'110px',xs:'50px'}},flexWrap:\"wrap\",justifyContent:\"center\",children:currentExercises.map(function(exercise,index){return/*#__PURE__*/_jsx(ExerciseCard,{exercise:exercise},index);})}),/*#__PURE__*/_jsx(Stack,{alignItems:\"center\",mt:\"100px\",children:exercises.length>9&&/*#__PURE__*/_jsx(Pagination,{shape:\"rounded\",count:Math.ceil(exercises.length/exercisesPerPage),page:currentPage,onChange:paginate,size:\"large\",siblingCount:0})})]});};export default Exercises;","map":{"version":3,"names":["React","useState","useEffect","Pagination","Box","Stack","Typography","exerciseOptions","fetchData","ExerciseCard","Exercises","exercises","setExercises","bodyPart","currentPage","setCurrentPage","exercisesPerPage","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","e","value","window","scrollTo","top","behavior","fetchExercisesData","exerciseData","mt","lg","gap","xs","map","exercise","index","length","Math","ceil"],"sources":["C:/Users/preet/Downloads/Gym-website/src/components/Exercises.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Pagination from '@mui/material/Pagination'\r\nimport { Box, Stack, Typography} from '@mui/material'\r\nimport { exerciseOptions, fetchData } from '../utils/fetchData' \r\nimport ExerciseCard from './ExerciseCard' \r\n\r\n\r\n\r\nconst Exercises = ({exercises, setExercises, bodyPart}) => {\r\n  \r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const exercisesPerPage = 9\r\n\r\n  const indexOfLastExercise = currentPage * exercisesPerPage;\r\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\r\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\r\n\r\n  const paginate = (e, value) => {\r\n    setCurrentPage(value);\r\n    window.scrollTo({top: 1800,  behavior: 'smooth'})\r\n  }\r\n\r\n  useEffect(() => { \r\n    const fetchExercisesData = async () => {\r\n      let exerciseData = [];\r\n\r\n      \r\n      if(bodyPart === 'all'){\r\n        exerciseData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions);\r\n      }else{\r\n        exerciseData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`, exerciseOptions); \r\n      }\r\n      setExercises(exerciseData);\r\n    }\r\n  \r\n    fetchExercisesData();\r\n  }, [bodyPart]);\r\n  \r\n\r\n  return (\r\n    <Box id='exercises'\r\n    sx={{mt: {lg: '110px'}}}\r\n    mt=\"50px\"\r\n    p='20px'\r\n    >\r\n      <Typography variant='h4' mb='46px' align='center'>\r\n        Available Exercises\r\n      </Typography>\r\n      <Stack direction='row' sx={{gap: { lg: '110px', xs: '50px'}}} flexWrap='wrap' justifyContent='center'>\r\n        {currentExercises.map((exercise, index) => (\r\n          <ExerciseCard  key={index} exercise={exercise} />\r\n        ))}\r\n      </Stack>\r\n      <Stack alignItems=\"center\" mt='100px'>\r\n          {exercises.length > 9 && (\r\n            <Pagination \r\n              shape='rounded'\r\n              count={Math.ceil(exercises.length / exercisesPerPage)}\r\n              page={currentPage}\r\n              onChange={paginate}\r\n              size='large'\r\n              siblingCount={0}\r\n            />\r\n          )}\r\n        </Stack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Exercises    "],"mappings":"8XAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,WAAP,KAAuB,0BAAvB,CACA,OAASC,GAAT,CAAcC,KAAd,CAAqBC,UAArB,KAAsC,eAAtC,CACA,OAASC,eAAT,CAA0BC,SAA1B,KAA2C,oBAA3C,CACA,MAAOC,aAAP,KAAyB,gBAAzB,C,wFAIA,GAAMC,UAAS,CAAG,QAAZA,UAAY,MAAyC,IAAvCC,UAAuC,MAAvCA,SAAuC,CAA5BC,YAA4B,MAA5BA,YAA4B,CAAdC,QAAc,MAAdA,QAAc,CAEzD,cAAsCZ,QAAQ,CAAC,CAAD,CAA9C,wCAAOa,WAAP,eAAoBC,cAApB,eACA,GAAMC,iBAAgB,CAAG,CAAzB,CAEA,GAAMC,oBAAmB,CAAGH,WAAW,CAAGE,gBAA1C,CACA,GAAME,qBAAoB,CAAGD,mBAAmB,CAAGD,gBAAnD,CACA,GAAMG,iBAAgB,CAAGR,SAAS,CAACS,KAAV,CAAgBF,oBAAhB,CAAsCD,mBAAtC,CAAzB,CAEA,GAAMI,SAAQ,CAAG,QAAXA,SAAW,CAACC,CAAD,CAAIC,KAAJ,CAAc,CAC7BR,cAAc,CAACQ,KAAD,CAAd,CACAC,MAAM,CAACC,QAAP,CAAgB,CAACC,GAAG,CAAE,IAAN,CAAaC,QAAQ,CAAE,QAAvB,CAAhB,EACD,CAHD,CAKAzB,SAAS,CAAC,UAAM,CACd,GAAM0B,mBAAkB,6FAAG,sJACrBC,YADqB,CACN,EADM,MAItBhB,QAAQ,GAAK,KAJS,gDAKFL,UAAS,CAAC,6CAAD,CAAgDD,eAAhD,CALP,QAKvBsB,YALuB,mEAOFrB,UAAS,gEAAyDK,QAAzD,EAAqEN,eAArE,CAPP,QAOvBsB,YAPuB,uBASzBjB,YAAY,CAACiB,YAAD,CAAZ,CATyB,uDAAH,kBAAlBD,mBAAkB,2CAAxB,CAYAA,kBAAkB,GACnB,CAdQ,CAcN,CAACf,QAAD,CAdM,CAAT,CAiBA,mBACE,MAAC,GAAD,EAAK,EAAE,CAAC,WAAR,CACA,EAAE,CAAE,CAACiB,EAAE,CAAE,CAACC,EAAE,CAAE,OAAL,CAAL,CADJ,CAEA,EAAE,CAAC,MAFH,CAGA,CAAC,CAAC,MAHF,wBAKE,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,EAAE,CAAC,MAA5B,CAAmC,KAAK,CAAC,QAAzC,iCALF,cAQE,KAAC,KAAD,EAAO,SAAS,CAAC,KAAjB,CAAuB,EAAE,CAAE,CAACC,GAAG,CAAE,CAAED,EAAE,CAAE,OAAN,CAAeE,EAAE,CAAE,MAAnB,CAAN,CAA3B,CAA8D,QAAQ,CAAC,MAAvE,CAA8E,cAAc,CAAC,QAA7F,UACGd,gBAAgB,CAACe,GAAjB,CAAqB,SAACC,QAAD,CAAWC,KAAX,qBACpB,KAAC,YAAD,EAA2B,QAAQ,CAAED,QAArC,EAAoBC,KAApB,CADoB,EAArB,CADH,EARF,cAaE,KAAC,KAAD,EAAO,UAAU,CAAC,QAAlB,CAA2B,EAAE,CAAC,OAA9B,UACKzB,SAAS,CAAC0B,MAAV,CAAmB,CAAnB,eACC,KAAC,UAAD,EACE,KAAK,CAAC,SADR,CAEE,KAAK,CAAEC,IAAI,CAACC,IAAL,CAAU5B,SAAS,CAAC0B,MAAV,CAAmBrB,gBAA7B,CAFT,CAGE,IAAI,CAAEF,WAHR,CAIE,QAAQ,CAAEO,QAJZ,CAKE,IAAI,CAAC,OALP,CAME,YAAY,CAAE,CANhB,EAFN,EAbF,GADF,CA4BD,CA3DD,CA6DA,cAAeX,UAAf"},"metadata":{},"sourceType":"module"}